// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BatchStatus {
  Manufactured
  StoredByDistributor
  ReceivedByDoctor
}

enum Role {
  MANUFACTURER
  DISTRIBUTOR
  DOCTOR
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  image   String?
  role    Role?
  address String    @unique
  Airdrop Airdrop[]
}

model Batch {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name          String
  pubkey        String      @unique
  manufacturer  String
  distributor   String?
  doctor        String?
  expiresAt     DateTime
  quantity      Int
  tempMin       Int
  tempMax       Int
  costPerPiece  Int
  status        BatchStatus
  tempDefect    Boolean     @default(false)
  startDate     DateTime?
  stopDate      DateTime?
  latestTempLog String?

  TempLog TempLog[]
  Vaccine Vaccine[]
}

model TempLog {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  batch     Batch    @relation(fields: [batchId], references: [id])
  timestamp DateTime
  temp      Int
  pubkey    String
  batchId   String
}

model Vaccine {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  pubkey  String    @unique
  batch   Batch     @relation(fields: [batchId], references: [id])
  batchId String
  used    Boolean   @default(false)
  usedBy  String?
  usedAt  DateTime?
}

model Airdrop {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String
  amount Int
}
